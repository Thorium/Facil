CREATE PROCEDURE [dbo].[ProcWithAllTypesNullExtended]
  @bigint BIGINT = NULL,
  @binary BINARY(42) = NULL,
  @bit BIT = NULL,
  @char CHAR(42) = NULL,
  @date DATE = NULL,
  @datetime DATETIME = NULL,
  @datetime2 DATETIME2(3) = NULL,
  @datetimeoffset DATETIMEOFFSET(1) = NULL,
  @decimal DECIMAL(10, 5) = NULL,
  @float FLOAT(42) = NULL,
  @image IMAGE = NULL,
  @int INT = NULL,
  @money MONEY = NULL,
  @nchar NCHAR(42) = NULL,
  @ntext NTEXT = NULL,
  @numeric NUMERIC(8, 3) = NULL,
  @nvarchar NVARCHAR(42) = NULL,
  @real REAL = NULL,
  @rowversion ROWVERSION = NULL,
  @smalldatetime SMALLDATETIME = NULL,
  @smallint SMALLINT = NULL,
  @smallmoney SMALLMONEY = NULL,
  @text TEXT = NULL,
  @time TIME(1) = NULL,
  @timestamp TIMESTAMP = NULL,
  @tinyint TINYINT = NULL,
  @uniqueidentifier UNIQUEIDENTIFIER = NULL,
  @varbinary VARBINARY(42) = NULL,
  @varchar VARCHAR(42) = NULL,
  @xml XML = NULL
AS

-- Use an extended sproc to force sp_describe_first_result_set to fail
-- and parser to fallback to SET FMTONLY ON
EXEC sp_getapplock 'TestLock', 'Update'

SELECT
  [bigint] = @bigint,
  [binary] = @binary,
  [bit] = @bit,
  [char] = @char,
  [date] = @date,
  [datetime] = @datetime,
  [datetime2] = @datetime2,
  [datetimeoffset] = @datetimeoffset,
  [decimal] = @decimal,
  [float] = @float,
  [image] = @image,
  [int] = @int,
  [money] = @money,
  [nchar] = @nchar,
  [ntext] = @ntext,
  [numeric] = @numeric,
  [nvarchar] = @nvarchar,
  [real] = @real,
  [rowversion] = @rowversion,
  [smalldatetime] = @smalldatetime,
  [smallint] = @smallint,
  [smallmoney] = @smallmoney,
  [text] = @text,
  [time] = @time,
  [timestamp] = @timestamp,
  [tinyint] = @tinyint,
  [uniqueidentifier] = @uniqueidentifier,
  [varbinary] = @varbinary,
  [varchar] = @varchar,
  [xml] = @xml
